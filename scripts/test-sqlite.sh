#!/bin/bash

# ===========================
# Script de Teste do SQLite
# ===========================

set -e

# Cores para output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

print_success() {
    echo -e "${GREEN}‚úì $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö† $1${NC}"
}

print_error() {
    echo -e "${RED}‚úó $1${NC}"
}

echo "üß™ Testando configura√ß√£o do SQLite..."

# Verificar se a pasta data existe
if [ -d "data" ]; then
    print_success "Pasta data existe"
else
    print_error "Pasta data n√£o existe"
    exit 1
fi

# Verificar permiss√µes da pasta data
if [ -w "data" ]; then
    print_success "Permiss√µes de escrita OK na pasta data"
else
    print_error "Sem permiss√£o de escrita na pasta data"
    exit 1
fi

# Verificar se o arquivo .gitkeep existe
if [ -f "data/.gitkeep" ]; then
    print_success "Arquivo .gitkeep existe"
else
    print_warning "Arquivo .gitkeep n√£o existe"
fi

# Verificar se o arquivo hack.db existe (pode n√£o existir ainda)
if [ -f "data/hack.db" ]; then
    print_success "Arquivo hack.db existe"
    ls -la data/hack.db
else
    print_warning "Arquivo hack.db n√£o existe ainda (ser√° criado na primeira execu√ß√£o)"
fi

# Verificar configura√ß√µes do Docker
echo ""
echo "üê≥ Verificando configura√ß√µes do Docker..."

# Verificar se o .dockerignore n√£o exclui a pasta data
if grep -q "^\*\*/data/$" .dockerignore; then
    print_error "Pasta data est√° sendo exclu√≠da no .dockerignore"
else
    print_success "Pasta data n√£o est√° sendo exclu√≠da no .dockerignore"
fi

# Verificar se arquivos de banco est√£o sendo ignorados corretamente
if grep -q "data/\*\.db" .gitignore; then
    print_success "Arquivos de banco na pasta data est√£o sendo ignorados no .gitignore"
else
    print_warning "Arquivos de banco na pasta data podem n√£o estar sendo ignorados"
fi

# Verificar se o docker-compose est√° configurado corretamente
if grep -q "./data:/app/data:rw" docker-compose.yml; then
    print_success "Volume do docker-compose configurado corretamente"
else
    print_error "Volume do docker-compose n√£o est√° configurado corretamente"
fi

echo ""
print_success "‚úÖ Teste de configura√ß√£o conclu√≠do!"
echo ""
echo "Para testar a aplica√ß√£o:"
echo "  docker compose down"
echo "  docker compose up --build"
